; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/pablo/projects/sicp/code; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:55716 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉sicp.core꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉sicp.core꞉> 
; Jack-in done.
clj꞉sicp.core꞉> 
; 
; Testing sicp.c1.change
; 
; Ran 0 tests containing 0 assertions.
; 0 failures, 0 errors.
{:test 0, :pass 0, :fail 0, :error 0, :type :summary}
clj꞉sicp.c1.change꞉> 
; Syntax error compiling at (src/sicp/c1/change.clj:22:12).
; Unable to resolve symbol: change in this context
clj꞉sicp.c1.change꞉> 
#'sicp.c1.change/change
clj꞉sicp.c1.change꞉> 
nil
clj꞉sicp.c1.change꞉> 
0
clj꞉sicp.c1.change꞉> 
292
clj꞉sicp.c1.change꞉> 
#'sicp.c1.change/change-test
clj꞉sicp.c1.change꞉> 
; 
; Testing sicp.c1.change
; 
; FAIL in (change-test) (form-init16860002969735208166.clj:22)
; SICP Example
; expected: (= (change 5 [1 2 4]) 292)
;   actual: (not (= 4 292))
; 
; FAIL in (change-test) (form-init16860002969735208166.clj:25)
; Zero
; expected: (= (change 0 [1 2 4]) 292)
;   actual: (not (= 1 292))
; 
; Ran 1 tests containing 2 assertions.
; 2 failures, 0 errors.
{:test 1, :pass 0, :fail 2, :error 0, :type :summary}
clj꞉sicp.c1.change꞉> 
; 
; Testing sicp.c1.change
; 
; FAIL in (change-test) (form-init16860002969735208166.clj:22)
; SICP Example
; expected: (= (change 5 [1 2 4]) 292)
;   actual: (not (= 4 292))
; 
; FAIL in (change-test) (form-init16860002969735208166.clj:25)
; Zero
; expected: (= (change 0 [1 2 4]) 292)
;   actual: (not (= 1 292))
; 
; Ran 1 tests containing 2 assertions.
; 2 failures, 0 errors.
{:test 1, :pass 0, :fail 2, :error 0, :type :summary}
clj꞉sicp.c1.change꞉> 
#'sicp.c1.change/change-test
clj꞉sicp.c1.change꞉> 
; 
; Testing sicp.c1.change
; 
; FAIL in (change-test) (form-init16860002969735208166.clj:25)
; Zero
; expected: (= (change 0 [1 2 4]) 292)
;   actual: (not (= 1 292))
; 
; Ran 1 tests containing 2 assertions.
; 1 failures, 0 errors.
{:test 1, :pass 1, :fail 1, :error 0, :type :summary}
clj꞉sicp.c1.change꞉> 
#'sicp.c1.change/change-test
clj꞉sicp.c1.change꞉> 
; 
; Testing sicp.c1.change
; 
; FAIL in (change-test) (form-init16860002969735208166.clj:25)
; Zero
; expected: (= (change 0 [1 2 4]) 0)
;   actual: (not (= 1 0))
; 
; Ran 1 tests containing 2 assertions.
; 1 failures, 0 errors.
{:test 1, :pass 1, :fail 1, :error 0, :type :summary}
clj꞉sicp.c1.change꞉> 
#'sicp.c1.change/change-test
clj꞉sicp.c1.change꞉> 
; 
; Testing sicp.c1.change
; 
; Ran 1 tests containing 2 assertions.
; 0 failures, 0 errors.
{:test 1, :pass 2, :fail 0, :error 0, :type :summary}
clj꞉sicp.c1.change꞉> 
0
clj꞉sicp.c1.change꞉> 
#'sicp.c1.change/change-test
clj꞉sicp.c1.change꞉> 
; 
; Testing sicp.c1.change
; 
; Ran 1 tests containing 3 assertions.
; 0 failures, 0 errors.
{:test 1, :pass 3, :fail 0, :error 0, :type :summary}
clj꞉sicp.c1.change꞉> 
#'sicp.c1.change/change-test
clj꞉sicp.c1.change꞉> 
; 
; Testing sicp.c1.change
; 
; FAIL in (change-test) (form-init16860002969735208166.clj:25)
; Short
; expected: (= (change 3 [2 4]) 1)
;   actual: (not (= 0 1))
; 
; Ran 1 tests containing 3 assertions.
; 1 failures, 0 errors.
{:test 1, :pass 2, :fail 1, :error 0, :type :summary}
clj꞉sicp.c1.change꞉> 
#'sicp.c1.change/change-test
clj꞉sicp.c1.change꞉> 
; 
; Testing sicp.c1.change
; 
; Ran 1 tests containing 3 assertions.
; 0 failures, 0 errors.
{:test 1, :pass 3, :fail 0, :error 0, :type :summary}
clj꞉sicp.c1.change꞉> 
; Syntax error compiling at (src/sicp/c1/pascal.clj:2:1).
; Unable to resolve symbol: foo in this context
clj꞉user꞉> 
#'user/foo
clj꞉user꞉> 
nil
clj꞉user꞉> 
#'sicp.c1.pascal/f
clj꞉sicp.c1.pascal꞉> 
1892
clj꞉sicp.c1.pascal꞉> 
4
clj꞉sicp.c1.pascal꞉> 
2
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/f
clj꞉sicp.c1.pascal꞉> 
25
clj꞉sicp.c1.pascal꞉> 
11
clj꞉sicp.c1.pascal꞉> 
4
clj꞉sicp.c1.pascal꞉> 
2
clj꞉sicp.c1.pascal꞉> 
1
clj꞉sicp.c1.pascal꞉> 
4
clj꞉sicp.c1.pascal꞉> 
2
clj꞉sicp.c1.pascal꞉> 
11
clj꞉sicp.c1.pascal꞉> 
4
clj꞉sicp.c1.pascal꞉> 
2
clj꞉sicp.c1.pascal꞉> 
17
clj꞉sicp.c1.pascal꞉> 
25
clj꞉sicp.c1.pascal꞉> 
; Execution error (ClassCastException) at sicp.c1.pascal/eval10778 (form-init16860002969735208166.clj:17).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉sicp.c1.pascal꞉> 
11
clj꞉sicp.c1.pascal꞉> 
4
clj꞉sicp.c1.pascal꞉> 
2
clj꞉sicp.c1.pascal꞉> 
; Execution error (ClassCastException) at sicp.c1.pascal/eval10786 (form-init16860002969735208166.clj:17).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉sicp.c1.pascal꞉> 
17
clj꞉sicp.c1.pascal꞉> 
25
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/iter-compute
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/iter-g
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/g
clj꞉sicp.c1.pascal꞉> 
144
clj꞉sicp.c1.pascal꞉> 
25
clj꞉sicp.c1.pascal꞉> 
144
clj꞉sicp.c1.pascal꞉> 
1
clj꞉sicp.c1.pascal꞉> 
2
clj꞉sicp.c1.pascal꞉> 
4
clj꞉sicp.c1.pascal꞉> 
144
clj꞉sicp.c1.pascal꞉> 
10
clj꞉sicp.c1.pascal꞉> 
4
clj꞉sicp.c1.pascal꞉> 
10
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/iter-g
clj꞉sicp.c1.pascal꞉> 
4
clj꞉sicp.c1.pascal꞉> 
8
clj꞉sicp.c1.pascal꞉> 
4
clj꞉sicp.c1.pascal꞉> 
8
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/iter-compute
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/iter-g
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/g
clj꞉sicp.c1.pascal꞉> 
4
clj꞉sicp.c1.pascal꞉> 
4
clj꞉sicp.c1.pascal꞉> 
11
clj꞉sicp.c1.pascal꞉> 
15
clj꞉sicp.c1.pascal꞉> 
4
clj꞉sicp.c1.pascal꞉> 
11
clj꞉sicp.c1.pascal꞉> 
25
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/iter-compute
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/iter-g
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/g
clj꞉sicp.c1.pascal꞉> 
25
clj꞉sicp.c1.pascal꞉> 
25
clj꞉sicp.c1.pascal꞉> 
10661
clj꞉sicp.c1.pascal꞉> 
10661
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/g
clj꞉sicp.c1.pascal꞉> 
10661
clj꞉sicp.c1.pascal꞉> 
10661
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/g
clj꞉sicp.c1.pascal꞉> 
10661
clj꞉sicp.c1.pascal꞉> 
10661
clj꞉sicp.c1.pascal꞉> 
; Syntax error compiling at (src/sicp/c1/pascal.clj:28:1).
; Unable to resolve symbol: deftest in this context
clj꞉sicp.c1.pascal꞉> 
; Syntax error compiling at (src/sicp/c1/pascal.clj:28:1).
; Unable to resolve symbol: deftest in this context
clj꞉sicp.c1.pascal꞉> 
nil
clj꞉sicp.c1.pascal꞉> 
#'sicp.c1.pascal/change-test
clj꞉sicp.c1.pascal꞉> 
; 
; Testing sicp.c1.pascal
; 
; Ran 1 tests containing 8 assertions.
; 0 failures, 0 errors.
{:test 1, :pass 8, :fail 0, :error 0, :type :summary}
clj꞉sicp.c1.pascal꞉> 
; 
; Testing sicp.c1.pascal
; 
; Ran 1 tests containing 8 assertions.
; 0 failures, 0 errors.
{:test 1, :pass 8, :fail 0, :error 0, :type :summary}
clj꞉sicp.c1.pascal꞉> 
292
clj꞉sicp.c1.change꞉> 
nil
clj꞉sicp.c1.change꞉> 
; 
; Testing sicp.c1.change
; 
; Ran 1 tests containing 3 assertions.
; 0 failures, 0 errors.
{:test 1, :pass 3, :fail 0, :error 0, :type :summary}
clj꞉sicp.c1.change꞉> 
